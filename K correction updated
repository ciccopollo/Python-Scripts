from numpy import *
import numpy as np
import matplotlib.pyplot as plt
from scipy.interpolate import interp1d
from astropy.io import ascii
import decimal
 
#Global (redshift calculations) 

centre=850
redshiftsize=3.5
redshiftbins=35

dz=float(redshiftsize/redshiftbins)
bins=arange(0, redshiftsize+dz, dz)

#Open SED

file1=ascii.read('m51sed')
#Wavelength and SED Flux columns
asedwave, aflux=file1['wave'], file1['flux']
sedwave, flux=np.array(asedwave), np.array(aflux)
#Want Wavelengths to have exactly two decimal places --> round
#Number of rows in SED file
sedrows=sedwave.shape[0]
#Create SED Matrix (Biggest One)
SED=np.zeros((sedrows,2))
#Fill Matrix with rounded wavelength values
#First column 1 and then column 2 
count=0
while (count<sedrows):
    SED[count][0]=round(float(sedwave[count]),2)
    count=count+1
 
count=0
while (count<sedrows):
    SED[count][1]=flux[count]
    count=count+1
 
#Open FILTER file

file2=ascii.read('850')
#Wavelength and Transmission columns
aoriginalwave, atrans=file2['wave'], file2['flux']
originalwave, trans=np.array(aoriginalwave), np.array(atrans)
 
#Number FILTER file rows
rows=originalwave.shape[0]
 
#Lowest filter value
lowest=originalwave[0]
#Difference Mid Filter/Lowest Filter Value
diff=round(float(centre-lowest,2))
 
#Array containing SED*TRANSMISSION results
 
RESULT=np.zeros((rows,4))
 
#LOOP TO CHANGE REDSHIFT/WAVELENGTH

for i in range(redshiftbins):
 
  #Wavelength
  zwave=centre/(1+bins[i])
  zlow=zwave-diff
  #Depending on zlow sign
  if zlow >= SED[0][0]:
   for g in range(sedrows):
    if SED[g][0]=zlow:
     
     
    
   


  
